"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/scrape/route";
exports.ids = ["app/api/scrape/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "node:assert":
/*!******************************!*\
  !*** external "node:assert" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:assert");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:console":
/*!*******************************!*\
  !*** external "node:console" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:console");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:diagnostics_channel":
/*!*******************************************!*\
  !*** external "node:diagnostics_channel" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("node:diagnostics_channel");

/***/ }),

/***/ "node:dns":
/*!***************************!*\
  !*** external "node:dns" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:dns");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:events");

/***/ }),

/***/ "node:fs/promises":
/*!***********************************!*\
  !*** external "node:fs/promises" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:fs/promises");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:http");

/***/ }),

/***/ "node:http2":
/*!*****************************!*\
  !*** external "node:http2" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:http2");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "node:perf_hooks":
/*!**********************************!*\
  !*** external "node:perf_hooks" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:perf_hooks");

/***/ }),

/***/ "node:querystring":
/*!***********************************!*\
  !*** external "node:querystring" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:querystring");

/***/ }),

/***/ "node:sqlite":
/*!******************************!*\
  !*** external "node:sqlite" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:sqlite");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:timers":
/*!******************************!*\
  !*** external "node:timers" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:timers");

/***/ }),

/***/ "node:tls":
/*!***************************!*\
  !*** external "node:tls" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:tls");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "node:util/types":
/*!**********************************!*\
  !*** external "node:util/types" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:util/types");

/***/ }),

/***/ "node:worker_threads":
/*!**************************************!*\
  !*** external "node:worker_threads" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("node:worker_threads");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=D%3A%5CHighperAI%5CTASK2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHighperAI%5CTASK2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=D%3A%5CHighperAI%5CTASK2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHighperAI%5CTASK2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_HighperAI_TASK2_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/scrape/route.ts */ \"(rsc)/./app/api/scrape/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/scrape/route\",\n        pathname: \"/api/scrape\",\n        filename: \"route\",\n        bundlePath: \"app/api/scrape/route\"\n    },\n    resolvedPagePath: \"D:\\\\HighperAI\\\\TASK2\\\\app\\\\api\\\\scrape\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_HighperAI_TASK2_app_api_scrape_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/scrape/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzY3JhcGUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNjcmFwZSUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDSGlnaHBlckFJJTVDVEFTSzIlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNIaWdocGVyQUklNUNUQVNLMiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDQTtBQUM3RTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvP2I1ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcSGlnaHBlckFJXFxcXFRBU0syXFxcXGFwcFxcXFxhcGlcXFxcc2NyYXBlXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zY3JhcGUvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zY3JhcGVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3NjcmFwZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXEhpZ2hwZXJBSVxcXFxUQVNLMlxcXFxhcHBcXFxcYXBpXFxcXHNjcmFwZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc2NyYXBlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=D%3A%5CHighperAI%5CTASK2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHighperAI%5CTASK2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/scrape/route.ts":
/*!*********************************!*\
  !*** ./app/api/scrape/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cheerio */ \"(rsc)/./node_modules/cheerio/dist/esm/index.js\");\n// Server-side scraper using fetch + cheerio.\n// Extracts profiles via JSON-LD (schema.org Person), Microdata Person, h-card microformats, and heuristics.\n\nconst ALLOWED_PROTOCOLS = new Set([\n    \"http:\",\n    \"https:\"\n]);\n// Basic SSRF guard: block localhost/private IP literals and localhost hostnames\nfunction isBlockedHost(u) {\n    const host = u.hostname.toLowerCase();\n    if (host === \"localhost\" || host.endsWith(\".localhost\")) return true;\n    if (host === \"0.0.0.0\") return true;\n    if (host === \"127.0.0.1\" || host.startsWith(\"127.\")) return true;\n    // Private ranges if provided as literal IP\n    const parts = host.split(\".\").map((p)=>Number(p));\n    if (parts.length === 4 && parts.every((n)=>Number.isFinite(n))) {\n        const [a, b] = parts;\n        if (a === 10) return true;\n        if (a === 172 && b >= 16 && b <= 31) return true;\n        if (a === 192 && b === 168) return true;\n    }\n    return false;\n}\nfunction safeURL(input) {\n    try {\n        const u = new URL(input);\n        if (!ALLOWED_PROTOCOLS.has(u.protocol)) return null;\n        if (isBlockedHost(u)) return null;\n        return u;\n    } catch  {\n        return null;\n    }\n}\nfunction absUrl(base, href) {\n    if (!href) return undefined;\n    try {\n        return new URL(href, base).toString();\n    } catch  {\n        return undefined;\n    }\n}\nfunction parseEmail(href) {\n    if (!href) return undefined;\n    if (href.startsWith(\"mailto:\")) {\n        return href.slice(\"mailto:\".length).split(\"?\")[0];\n    }\n    // Fallback: detect visible email text\n    const m = href.match(/[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}/i);\n    return m ? m[0] : undefined;\n}\nfunction detectSocial(url) {\n    const u = url.toLowerCase();\n    if (u.includes(\"github.com/\")) return {\n        type: \"GitHub\",\n        url\n    };\n    if (u.includes(\"linkedin.com/in\") || u.includes(\"linkedin.com/company\")) return {\n        type: \"LinkedIn\",\n        url\n    };\n    if (u.includes(\"twitter.com/\") || u.includes(\"x.com/\")) return {\n        type: \"Twitter/X\",\n        url\n    };\n    if (u.includes(\"instagram.com/\")) return {\n        type: \"Instagram\",\n        url\n    };\n    if (u.includes(\"facebook.com/\")) return {\n        type: \"Facebook\",\n        url\n    };\n    if (u.includes(\"youtube.com/\") || u.includes(\"youtu.be/\")) return {\n        type: \"YouTube\",\n        url\n    };\n    if (u.includes(\"medium.com/\")) return {\n        type: \"Medium\",\n        url\n    };\n    if (u.includes(\"t.me/\")) return {\n        type: \"Telegram\",\n        url\n    };\n    if (u.includes(\"mastodon.social\") || u.includes(\"@\")) return null // too ambiguous; skip generic @ links\n    ;\n    return null;\n}\nfunction cleanText(s) {\n    if (!s) return undefined;\n    const t = s.replace(/\\s+/g, \" \").trim();\n    return t || undefined;\n}\nfunction uniq(arr, key) {\n    const m = new Map();\n    for (const v of arr)m.set(key(v), v);\n    return [\n        ...m.values()\n    ];\n}\nfunction mergeProfiles(list) {\n    // Merge by (name + email) or shared social url\n    const out = [];\n    for (const p of list){\n        let merged = false;\n        for (const q of out){\n            const sameNameEmail = p.name && q.name && p.name.toLowerCase() === q.name.toLowerCase() && (p.email && q.email && p.email.toLowerCase() === q.email.toLowerCase() || !p.email && !q.email);\n            const socialOverlap = new Set((q.socials || []).map((s)=>s.url));\n            const hasOverlap = (p.socials || []).some((s)=>socialOverlap.has(s.url));\n            if (sameNameEmail || hasOverlap) {\n                q.name ||= p.name;\n                q.title ||= p.title;\n                q.email ||= p.email;\n                q.image ||= p.image;\n                q.bio ||= p.bio;\n                q.socials = uniq([\n                    ...q.socials || [],\n                    ...p.socials || []\n                ], (s)=>s.url);\n                q.links = uniq([\n                    ...q.links || [],\n                    ...p.links || []\n                ], (l)=>l);\n                merged = true;\n                break;\n            }\n        }\n        if (!merged) out.push({\n            ...p,\n            socials: uniq(p.socials || [], (s)=>s.url),\n            links: uniq(p.links || [], (l)=>l)\n        });\n    }\n    return out;\n}\n// Extractors\nfunction extractJsonLd($, base) {\n    const profiles = [];\n    $('script[type=\"application/ld+json\"]').each((_, el)=>{\n        const raw = $(el).contents().text();\n        if (!raw) return;\n        try {\n            const json = JSON.parse(raw);\n            const items = Array.isArray(json) ? json : [\n                json\n            ];\n            for (const item of items){\n                const queue = [\n                    item\n                ];\n                while(queue.length){\n                    const cur = queue.shift();\n                    if (!cur || typeof cur !== \"object\") continue;\n                    const type = cur[\"@type\"] || cur.type;\n                    const types = Array.isArray(type) ? type : [\n                        type\n                    ];\n                    if (types && types.some((t)=>typeof t === \"string\" && t.toLowerCase().includes(\"person\"))) {\n                        const p = {\n                            name: cleanText(cur.name),\n                            title: cleanText(cur.jobTitle || cur.jobtitle),\n                            email: cleanText(cur.email),\n                            image: absUrl(base, cur.image?.url || cur.image),\n                            bio: cleanText(cur.description),\n                            socials: [],\n                            links: [],\n                            source: \"jsonld\"\n                        };\n                        const sameAs = [];\n                        if (Array.isArray(cur.sameAs)) sameAs.push(...cur.sameAs);\n                        if (cur.url) sameAs.push(cur.url);\n                        for (const u of sameAs){\n                            const full = absUrl(base, u);\n                            if (!full) continue;\n                            const s = detectSocial(full);\n                            if (s) p.socials.push(s);\n                            else p.links.push(full);\n                        }\n                        profiles.push(p);\n                    }\n                    for (const v of Object.values(cur))if (v && typeof v === \"object\") queue.push(v);\n                }\n            }\n        } catch  {\n        // Ignore malformed JSON-LD blocks\n        }\n    });\n    return profiles;\n}\nfunction extractMicrodata($, base) {\n    const profiles = [];\n    const sel = '[itemscope][itemtype*=\"schema.org/Person\"], [itemtype*=\"schema.org/person\"]';\n    $(sel).each((_, el)=>{\n        const node = $(el);\n        const getProp = (prop)=>{\n            const t = node.find(`[itemprop=\"${prop}\"]`).first();\n            if (!t.length) return undefined;\n            if (t.is(\"meta\")) return cleanText(t.attr(\"content\") || t.attr(\"value\"));\n            if (t.is(\"img\")) return absUrl(base, t.attr(\"src\"));\n            return cleanText(t.text() || t.attr(\"content\") || t.attr(\"value\"));\n        };\n        const p = {\n            name: cleanText(getProp(\"name\")),\n            title: cleanText(getProp(\"jobTitle\")),\n            email: cleanText(getProp(\"email\")),\n            image: getProp(\"image\"),\n            bio: cleanText(getProp(\"description\")),\n            socials: [],\n            links: [],\n            source: \"microdata\"\n        };\n        node.find('[itemprop=\"sameAs\"], a[itemprop=\"url\"]').each((_, a)=>{\n            const href = $(a).attr(\"href\");\n            const full = absUrl(base, href);\n            if (!full) return;\n            const s = detectSocial(full);\n            if (s) p.socials.push(s);\n            else p.links.push(full);\n        });\n        profiles.push(p);\n    });\n    return profiles;\n}\nfunction extractHCard($, base) {\n    const profiles = [];\n    $(\".h-card\").each((_, el)=>{\n        const n = $(el);\n        const p = {\n            name: cleanText(n.find(\".p-name, .p-org\").first().text()),\n            title: cleanText(n.find(\".p-job-title, .p-title\").first().text()),\n            email: parseEmail(n.find(\".u-email, a[href^='mailto:']\").attr(\"href\") || \"\"),\n            image: absUrl(base, n.find(\".u-photo, img\").first().attr(\"src\")),\n            bio: cleanText(n.find(\".p-note, .p-bio\").first().text()),\n            socials: [],\n            links: [],\n            source: \"h-card\"\n        };\n        n.find(\"a[rel='me'], a[rel='author'], a\").each((_, a)=>{\n            const full = absUrl(base, $(a).attr(\"href\"));\n            if (!full) return;\n            const s = detectSocial(full);\n            if (s) p.socials.push(s);\n            else p.links.push(full);\n        });\n        profiles.push(p);\n    });\n    return profiles;\n}\nfunction extractHeuristics($, base) {\n    const profiles = [];\n    const candidates = $([\n        \"[class*='author']\",\n        \"[class*='profile']\",\n        \"[class*='member']\",\n        \"[class*='team']\",\n        \"[class*='person']\",\n        \"[class*='user']\",\n        \"[class*='staff']\",\n        \"[class*='founder']\",\n        \"article.author\",\n        \"section.author\"\n    ].join(\",\"));\n    candidates.each((_, el)=>{\n        const node = $(el);\n        // Look for name and title\n        const name = cleanText(node.find(\"h1, h2, h3, h4, .name, [class*='name']\").first().text()) || undefined;\n        const title = cleanText(node.find(\".title, .role, [class*='job'], [class*='title'], [class*='role']\").first().text()) || undefined;\n        const email = parseEmail(node.find(\"a[href^='mailto:']\").attr(\"href\") || node.find(\"a[href*='@']\").attr(\"href\") || node.text()) || undefined;\n        const image = absUrl(base, node.find(\"img\").first().attr(\"src\"));\n        const bio = cleanText(node.find(\"p, .bio, [class*='bio'], [class*='about']\").first().text()) || undefined;\n        const socials = [];\n        const links = [];\n        node.find(\"a[href]\").each((_, a)=>{\n            const full = absUrl(base, $(a).attr(\"href\"));\n            if (!full) return;\n            const s = detectSocial(full);\n            if (s) socials.push(s);\n            else links.push(full);\n        });\n        if (name || title || email || image || bio || socials.length > 0) {\n            profiles.push({\n                name,\n                title,\n                email,\n                image,\n                bio,\n                socials: uniq(socials, (s)=>s.url),\n                links: uniq(links, (l)=>l),\n                source: \"heuristic\"\n            });\n        }\n    });\n    // Also detect standalone author blocks\n    $(\"a[rel='author'], [itemprop='author']\").each((_, el)=>{\n        const n = $(el);\n        const href = absUrl(base, n.attr(\"href\"));\n        const p = {\n            name: cleanText(n.text()),\n            links: href ? [\n                href\n            ] : [],\n            source: \"heuristic\"\n        };\n        if (p.name || p.links && p.links.length) profiles.push(p);\n    });\n    return profiles;\n}\nasync function POST(req) {\n    try {\n        const { url } = await req.json().catch(()=>({}));\n        if (!url) {\n            return Response.json({\n                ok: false,\n                error: \"Missing 'url' in request body\"\n            }, {\n                status: 400\n            });\n        }\n        const target = safeURL(url);\n        if (!target) {\n            return Response.json({\n                ok: false,\n                error: \"Invalid or disallowed URL\"\n            }, {\n                status: 400\n            });\n        }\n        const controller = new AbortController();\n        const timeout = setTimeout(()=>controller.abort(), 12000);\n        const res = await fetch(target.toString(), {\n            method: \"GET\",\n            redirect: \"follow\",\n            signal: controller.signal,\n            headers: {\n                \"User-Agent\": \"ProfileExtractorBot/1.0 (+https://vercel.com/) Mozilla/5.0 (compatible; MesoAssignmentBot/1.0)\",\n                Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"\n            }\n        }).catch((e)=>{\n            if (e.name === \"AbortError\") throw new Error(\"Fetch timed out\");\n            throw e;\n        });\n        clearTimeout(timeout);\n        if (!res.ok) {\n            return Response.json({\n                ok: false,\n                error: `Failed to fetch: ${res.status}`\n            }, {\n                status: 502\n            });\n        }\n        const contentType = res.headers.get(\"content-type\") || \"\";\n        if (!contentType.includes(\"text/html\")) {\n            return Response.json({\n                ok: false,\n                error: \"URL did not return HTML content\"\n            }, {\n                status: 400\n            });\n        }\n        // Limit body size (first ~1.2MB) to avoid huge pages\n        const raw = await res.text();\n        const html = raw.length > 1200000 ? raw.slice(0, 1200000) : raw;\n        const $ = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n        const collected = [\n            ...extractJsonLd($, target),\n            ...extractMicrodata($, target),\n            ...extractHCard($, target),\n            ...extractHeuristics($, target)\n        ];\n        // Clean up results\n        const cleaned = mergeProfiles(collected.map((p)=>({\n                ...p,\n                name: cleanText(p.name),\n                title: cleanText(p.title),\n                email: p.email?.toLowerCase(),\n                bio: cleanText(p.bio),\n                image: p.image,\n                socials: uniq(p.socials || [], (s)=>s.url),\n                links: uniq(p.links || [], (l)=>l)\n            })).filter((p)=>p.name || p.email || p.socials && p.socials.length || p.image || p.bio));\n        return Response.json({\n            ok: true,\n            url: target.toString(),\n            profiles: cleaned\n        });\n    } catch (e) {\n        const msg = typeof e?.message === \"string\" ? e.message : \"Unknown error\";\n        return Response.json({\n            ok: false,\n            error: msg\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/scrape/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/undici","vendor-chunks/iconv-lite","vendor-chunks/parse5","vendor-chunks/cheerio","vendor-chunks/css-select","vendor-chunks/entities","vendor-chunks/domutils","vendor-chunks/htmlparser2","vendor-chunks/whatwg-mimetype","vendor-chunks/nth-check","vendor-chunks/cheerio-select","vendor-chunks/whatwg-encoding","vendor-chunks/encoding-sniffer","vendor-chunks/domhandler","vendor-chunks/dom-serializer","vendor-chunks/css-what","vendor-chunks/parse5-parser-stream","vendor-chunks/parse5-htmlparser2-tree-adapter","vendor-chunks/domelementtype","vendor-chunks/safer-buffer","vendor-chunks/boolbase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscrape%2Froute&page=%2Fapi%2Fscrape%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscrape%2Froute.ts&appDir=D%3A%5CHighperAI%5CTASK2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHighperAI%5CTASK2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();